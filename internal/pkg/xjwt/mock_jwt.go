// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/xjwt/jwt.go
//
// Generated by this command:
//
//	mockgen -source internal/pkg/xjwt/jwt.go -destination internal/pkg/xjwt/mock_jwt.go -package xjwt
//

// Package xjwt is a generated GoMock package.
package xjwt

import (
	reflect "reflect"
	time "time"

	jwt "github.com/golang-jwt/jwt/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockJWTHelper is a mock of JWTHelper interface.
type MockJWTHelper struct {
	ctrl     *gomock.Controller
	recorder *MockJWTHelperMockRecorder
	isgomock struct{}
}

// MockJWTHelperMockRecorder is the mock recorder for MockJWTHelper.
type MockJWTHelperMockRecorder struct {
	mock *MockJWTHelper
}

// NewMockJWTHelper creates a new mock instance.
func NewMockJWTHelper(ctrl *gomock.Controller) *MockJWTHelper {
	mock := &MockJWTHelper{ctrl: ctrl}
	mock.recorder = &MockJWTHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTHelper) EXPECT() *MockJWTHelperMockRecorder {
	return m.recorder
}

// GenerateJWT mocks base method.
func (m *MockJWTHelper) GenerateJWT(issuer, userID string, expiryTime time.Duration, key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWT", issuer, userID, expiryTime, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWT indicates an expected call of GenerateJWT.
func (mr *MockJWTHelperMockRecorder) GenerateJWT(issuer, userID, expiryTime, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWT", reflect.TypeOf((*MockJWTHelper)(nil).GenerateJWT), issuer, userID, expiryTime, key)
}

// GetTokenClaims mocks base method.
func (m *MockJWTHelper) GetTokenClaims(token, secret string) (jwt.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenClaims", token, secret)
	ret0, _ := ret[0].(jwt.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenClaims indicates an expected call of GetTokenClaims.
func (mr *MockJWTHelperMockRecorder) GetTokenClaims(token, secret any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenClaims", reflect.TypeOf((*MockJWTHelper)(nil).GetTokenClaims), token, secret)
}

// ValidateJWT mocks base method.
func (m *MockJWTHelper) ValidateJWT(token, secret string) (*jwt.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateJWT", token, secret)
	ret0, _ := ret[0].(*jwt.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateJWT indicates an expected call of ValidateJWT.
func (mr *MockJWTHelperMockRecorder) ValidateJWT(token, secret any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateJWT", reflect.TypeOf((*MockJWTHelper)(nil).ValidateJWT), token, secret)
}
